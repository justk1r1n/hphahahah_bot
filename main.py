import asyncio
import logging
from aiogram import Bot, Dispatcher, types
from aiogram.filters.command import Command
from aiogram.types import ContentType
import random
API_TOKEN = '7709117659:AAHHiNc0KtMV7AYlnZeOSB6pMnqLkhYAAeo'
logging.basicConfig(level=logging.INFO)
bot = Bot(token=API_TOKEN)
dp = Dispatcher()
@dp.message(Command("start"))
async def cmd_start(message: types.Message):
    await message.answer("—ç–º–º –Ω—É –¥–æ–±–∞–≤—å—Ç–µ –º–µ–Ω—è –≤ —Å–≤–æ—é –≥—Ä—É–ø–ø—É –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ —á—Ç–æ–±—ã –≤—Å–µ –µ—ë —É—á–∞—Å—Ç–Ω–∏–∫–∏ —Å–≥–æ—Ä–µ–ª–∏ –∑–∞–∂–∏–≤–æ üòçüòçüòç\n\n\n\n\n\n\n\n–µ—Å–ª–∏ –≤—ã –≥–µ(–Ω–∏)–π –∏ –≤–∞–º –Ω—É–∂–Ω–∞ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –∫–æ–º–∞–Ω–¥–∞–º, —Ç–æ –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ: '—è –ª–æ—Ö'")
@dp.message(lambda message: message.text.lower() == "–ø–∏–Ω–≥")
async def handle_ping(message: types.Message):
    await message.answer("–ü–û–ù–ì")
@dp.message(lambda message: message.text.lower() == "–∫–∏–Ω–≥")
async def handle_ping(message: types.Message):
    await message.answer("–ö–û–ù–ì")
@dp.message(lambda message: message.text.lower() == "—è –ª–æ—Ö")
async def handle_ping(message: types.Message):
    await message.answer("—è —Ç–µ–±—è –ø–µ—Ä–µ–∏–≥—Ä–∞–ª —á–µ–ª —Ç—ã —Ç–∞–∫–æ–π –ª–æ—à–∞—Ä–∞ —Ö–ø—Ö–ø–ê–•–ê–•–ê–•–í–•–í–ê–ü–•–í–ê–•–ü–í–ê–•–ü\n\n\n\n\n\n—á—Ç–æ–±—ã –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é —É–≤–∏–¥–µ—Ç—å –Ω—É–∂–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å '–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è'")
@dp.message(lambda message: message.text.lower() == "–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è")
async def handle_ping(message: types.Message):
    await message.answer("https://teletype.in/@yaloxhxhx/instrukcia_sosososo")
@dp.message(lambda message: message.text.lower() == "—à–∏–ø–ø–∏–Ω–≥")
async def handle_two(message: types.Message):
    chat_members = await bot.get_chat_administrators(message.chat.id)
    if len(chat_members) < 2:
        await message.answer("–∑–æ–≤–∏—Ç–µ –∫–æ–≥–¥–∞ –≥—Ä—É–ø–ø–∞ —Ä–∞–∑—Ä–æ—Å—Ç—ë—Ç—Å—è, –ª–æ—Ö–∏")
        return
    selected_members = random.sample(chat_members, 2)
    usernames = [member.user.username for member in selected_members]
    await message.answer(f"–Ω—É —è –≤–æ–±—â–µ–º —É–∑–Ω–∞–ª —á—ë —Ç—É—Ç —É –≤–∞—Å –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç, —Ç–∞–∫ —á—Ç–æ –≤–æ—Ç: @{usernames[0]}, @{usernames[1]}. —ç—Ç–∏ –ª—é–¥–∏ –±—É–¥—É—Ç –ª—é–±–∏—Ç—å –¥—Ä—É–≥ –¥—Ä—É–≥–∞ –¥–æ –∫–æ–Ω—Ü–∞ —ç—Ç–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è. –Ω—É –∞ —è –≤ –æ—Ç–ª–∏—á–∏–∏ –æ—Ç –¥—Ä—É–≥–∏—Ö —Ä–∞–∑—Ä–∞–±–æ–≤ –Ω–µ –∏–¥–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä—É—é —Å–µ–±—è –º—É—Ä—á–∞—â–µ–π –∫–æ—à–µ—á–∫–æ–π —Ç–∞–∫ —á—Ç–æ –ì–ê–í.")
async def main():
    await dp.start_polling(bot)
if __name__ == "__main__":
    asyncio.run(main())